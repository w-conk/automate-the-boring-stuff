{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww15400\viewh12220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ###############################################################################\
Hello.\
\
This document is intended to outline the context and order of the files in this directory.\
\
This directory contains python code that follows the e-book, \'93Automate the Boring Stuff\'94 (ATBS). I started this readme in the middle of chapter 3, so the first few files are related to \'93Chapters 1 and 2\'94 because I can\'92t remember exactly when I wrote them and I don\'92t want to go check. \
\
From chapter 3 on I will write out the chapter and which files were created/completed in that chapter. \
\
Many of these programs are directly copied from ATBS for educational purposes. Almost none of the code in this directory is groundbreaking, original, or valuable code outside of learning purposes.\
\
###############################################################################\
\
CHAPTERS 1 and 2\
-`swordfish.py` is a very simple program that uses while loops and if statements to determine the correct user and password. It is from chapter 1 or 2 of ATBS.\
-`number_guess.py` is a program that focuses on looping and if/then logic to help the user determine/guess a random number. It is from chapter 1 or 2 of ATBS. It builds on `swordfish.py`\
-`RPS.py` is code to create a rock, paper, scissors game in the terminal. It uses the code from Chapter 2 of ATBS.\
-`rps_retry.py` is me going through the rock, paper, scissors game looking at only the output and coding it myself without looking at any of the code. It should be very similar if not identical to `RPS.py`\
\
CHAPTER 3\
-`abcdCallStack.py` is a simple program that is intended to show how the call stack works. It defines multiple functions and shows the way in which python navigates through them. I probably need to study this concept a bit more because I am not that good at explaining it here, but I at least sort of understand it right now as a beginner. The program itself is a good explainer.\
-`localGlobalSameName.py` is example code from ATBS that is intended to help explain the difference between local and global variables. I pretty much understand this concept. A local variable is a variable defined inside of a function and cannot be called outside of the function globally. A global variable can be called by a function. It\'92s not recommended to use too many global variables because it makes your code harder to troubleshoot (you\'92d have to search all your code for every instance of the global variable to see where it screwed up). It also exhibits how you should avoid using the same name for local and global variables because it\'92s confusing. Pretty simple.\
-`zeroDivide.py` is a quick program to show how basic error handling works. That\'92s it. `try:` and `except` arguments. Fairly straightforward.\
-`zigzag.py` is a program that creates a zig zag animation in the terminal. This was all copied from ATBS. I will need to return to this program to program it without looking up the code.\
-`collatz.py` self-written code to finish the problem presented at the end of chapter three. Woo.\
\
CHAPTER 4\
\
 }